package br.edu.ifnmg.poo.trabalhofinalpoo.gui;

import br.edu.ifnmg.poo.trabalhofinalpoo.repository.IRepository;
import br.edu.ifnmg.poo.trabalhofinalpoo.repository.ProjectEntity;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.Frame;
import java.util.List;

public class LixeiraTela extends javax.swing.JDialog {

    private final IRepository repository;
    private Long idSelecionado;

    /**
     * Creates new form LixeiraTela
     * @param parent O frame pai.
     * @param modal Se a janela é modal.
     * @param repository O repositório da entidade a ser gerenciada.
     */
    public LixeiraTela(Frame parent, boolean modal, IRepository repository) {
        super(parent, modal);
        this.repository = repository;

        initComponents();

        setLocationRelativeTo(null);

        carregarItensExcluidos();

        adicionarListeners();
    }

    private void carregarItensExcluidos() {
        List<ProjectEntity> itens = repository.findAllInTrash();
        DefaultTableModel model = (DefaultTableModel) tblItensExcluidos.getModel();
        model.setRowCount(0);

        for (ProjectEntity item : itens) {
            Object[] row = {
                    item.getId(),
                    item.toString()
            };
            model.addRow(row);
        }
    }

    private void adicionarListeners() {
        tblItensExcluidos.getSelectionModel().addListSelectionListener(event -> {
            if (!event.getValueIsAdjusting() && tblItensExcluidos.getSelectedRow() != -1) {
                int selectedRow = tblItensExcluidos.getSelectedRow();
                idSelecionado = (Long) tblItensExcluidos.getValueAt(selectedRow, 0);
            } else {
                idSelecionado = null;
            }
        });
        btnRestaurar.addActionListener(e -> restaurarItem());
        btnExcluirPermanentemente.addActionListener(e -> excluirPermanentemente());
        btnEsvaziarLixeira.addActionListener(e -> esvaziarLixeira());
    }

    private void restaurarItem() {
        if (idSelecionado == null) {
            JOptionPane.showMessageDialog(this, "Selecione um item para restaurar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        repository.recoverFromTrash(idSelecionado);
        JOptionPane.showMessageDialog(this, "Item restaurado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        carregarItensExcluidos();
    }

    private void excluirPermanentemente() {
        if (idSelecionado == null) {
            JOptionPane.showMessageDialog(this, "Selecione um item para excluir.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int resposta = JOptionPane.showConfirmDialog(this,
                "Esta ação não pode ser desfeita. Deseja realmente excluir este item permanentemente?",
                "Confirmar Exclusão Definitiva", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (resposta == JOptionPane.YES_OPTION) {
            repository.deletePermanently(idSelecionado);
            JOptionPane.showMessageDialog(this, "Item excluído permanentemente.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            carregarItensExcluidos();
        }
    }

    private void esvaziarLixeira() {
        int resposta = JOptionPane.showConfirmDialog(this,
                "Tem certeza que deseja esvaziar a lixeira? Todos os itens serão excluídos permanentemente.",
                "Esvaziar Lixeira", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (resposta == JOptionPane.YES_OPTION) {
            int totalExcluido = repository.emptyTrash();
            JOptionPane.showMessageDialog(this, totalExcluido + " itens foram excluídos permanentemente.", "Lixeira Vazia", JOptionPane.INFORMATION_MESSAGE);
            carregarItensExcluidos();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPrincipal = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItensExcluidos = new javax.swing.JTable();
        btnRestaurar = new javax.swing.JButton();
        btnExcluirPermanentemente = new javax.swing.JButton();
        btnEsvaziarLixeira = new javax.swing.JButton();
        lblAviso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lixeira");

        pnlPrincipal.setBackground(new java.awt.Color(255, 255, 255));

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(51, 51, 51));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Lixeira");

        tblItensExcluidos.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "ID", "Descrição"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                    false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblItensExcluidos);

        btnRestaurar.setText("Restaurar");

        btnExcluirPermanentemente.setBackground(new java.awt.Color(255, 51, 51));
        btnExcluirPermanentemente.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluirPermanentemente.setText("Excluir Permanentemente");

        btnEsvaziarLixeira.setText("Esvaziar Lixeira");

        lblAviso.setForeground(new java.awt.Color(102, 102, 102));
        lblAviso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAviso.setText("Itens excluídos permanentemente não podem ser recuperados.");

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
                pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlPrincipalLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                                        .addGroup(pnlPrincipalLayout.createSequentialGroup()
                                                .addComponent(btnRestaurar)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnExcluirPermanentemente)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnEsvaziarLixeira))
                                        .addComponent(lblAviso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        pnlPrincipalLayout.setVerticalGroup(
                pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlPrincipalLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblTitulo)
                                .addGap(18, 18, 18)
                                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnRestaurar)
                                        .addComponent(btnExcluirPermanentemente)
                                        .addComponent(btnEsvaziarLixeira))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAviso)
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEsvaziarLixeira;
    private javax.swing.JButton btnExcluirPermanentemente;
    private javax.swing.JButton btnRestaurar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAviso;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JTable tblItensExcluidos;
    // End of variables declaration//GEN-END:variables
}